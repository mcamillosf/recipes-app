{"version":3,"sources":["redux/actions/index.jsx","services/requests.js","components/SearchBar.jsx","images/shareIcon.svg","images/whiteHeartIcon.svg","images/blackHeartIcon.svg","utils/helpSearch.jsx","images/drinkIcon.svg","images/exploreIcon.svg","images/mealIcon.svg","images/profileIcon.svg","images/searchIcon.svg","images/loginIcon.svg","components/Footer.jsx","utils/getPlaceholder.jsx","components/Header.jsx","components/RecipeCard.jsx","pages/Drinks.jsx","pages/Explore.jsx","components/Filters.jsx","utils/favoriteButtonHelper.jsx","components/FavoriteButton.jsx","components/SmallRecipeCard.jsx","pages/FavoriteRecipes.jsx","pages/Foods.jsx","pages/Login.jsx","pages/Profile.jsx","components/DoneCards.jsx","pages/RecipesDone.jsx","services/randomsRequests.js","pages/ExploreFoods.jsx","pages/ExploreDrinks.jsx","components/IngredientCard.jsx","pages/ExploreIngredients.jsx","pages/ExploreFoodsArea.jsx","components/IngredientsList.jsx","components/RecipeHead.jsx","components/RecipeImage.jsx","components/RecipeInstructions.jsx","components/ShareButton.jsx","components/StartRecipesBtn.jsx","utils/handleIngredientsList.jsx","pages/RecipesDetails.jsx","pages/RecipesInProgress.jsx","pages/NotFound.jsx","App.js","serviceWorker.js","redux/reducers/userReducer.jsx","redux/reducers/functionsReducer.jsx","redux/reducers/recipesReducer.jsx","redux/reducers/index.jsx","redux/store/index.jsx","index.js"],"names":["LOGIN","ENABLE_DISABLE_SEARCH_BAR","ENABLE_BUTTON","DISABLE_BUTTON","SET_RECIPE_LIST","SET_DRINK_LIST","SET_FOOD_LIST","SET_RELOAD_LIST","ENABLE_DISABLE_FINISH_BUTTON","setUserEmail","email","type","enableSearchBar","change","enableButton","setFoodList","payload","setDrinkList","setReloadList","value","setButtonState","fetchRecipes","limit","api","a","fetch","response","json","result","meals","slice","drinks","fetchCategories","cat","numberOfButtons","fetchRecipesByCategory","category","numberOfRecipes","fetchDetails","id","fetchIngredients","fetchSearch","query","endpoint","fetchCountry","country","final","fetchIngredientsFilter","ingredient","SearchBar","history","useHistory","dispatch","useDispatch","initialState","search","searchCategory","firstRender","useRef","path","location","pathname","useState","state","setState","searchResults","setSearchResults","pathRecipes","getPathAndApi","handleChange","target","name","handleFetchSearch","results","handleClick","length","global","alert","document","getElementsByName","forEach","radio","checked","useEffect","current","newPath","helpSearch","push","includes","className","placeholder","onChange","data-testid","htmlFor","onClick","module","exports","option","idMeal","idDrink","Footer","to","src","drinkIcon","alt","exploreIcon","mealIcon","getPlaceholder","Header","enable","useSelector","functionsReducer","enableSearch","historico","profileIcon","searchIcon","RecipeCard","thumb","Drinks","drinkList","recipes","reloadList","strCategory","categoriesList","setCategoriesList","filterCategory","setFilterCategory","handleDrinksList","newDrinksList","handleCategoriesList","newCategoriesList","handleFetchByCategory","handleFilter","innerHTML","map","key","index","strDrink","strDrinkThumb","recipeId","Explore","handleExplore","text","Filters","setFilters","favoriteButtonHelper","isFavoritePage","details","image","alcoholicOrNot","area","strMeal","strMealThumb","strArea","strAlcoholic","FavoriteButton","handleReload","testid","whiteHeartIcon","setImage","useLocation","favorite","localStorage","favoriteRecipes","JSON","parse","getItem","some","element","blackHeartIcon","favFiltered","filter","setItem","stringify","exist","arr","defaultProps","console","log","copy","require","SmallRecipeCard","message","setMessage","messageIndex","setMessageIndex","orig","window","origin","recipe","setTimeout","changeMessage","shareIcon","hidden","doneDate","tags","splice","item","i","FavoriteRecipes","favoritesRecipes","favorites","setFavorites","filters","done","Foods","foodList","handleFoodsList","newFoodsList","concat","Login","password","valid","setValid","title","test","loginIcon","action","disabled","e","preventDefault","Profile","userEmail","clear","DoneCards","doneRecipes","changeRoute","RecipesDone","setDoneRecipes","randomFood","randomDrink","ExploreFoods","randomFoodId","setRandomFoodId","fetchRandomFood","then","ExploreDrinks","randomDrinkId","setRandomDrinkId","fetchRandomDrink","IngredientCard","newRecList","ExploreIngredients","apiString","ingredientsList","setIngredientsList","handleIngredientsList","IngredientsList","ExploreFoodsArea","countryList","setCountryList","foodsList","setFoodsList","filterCountry","setFilterCountry","handleCountryFoods","teste","countryListFood","list","progress","useParams","verifyIfShouldEnableButton","numberOfInputsChecked","inputs","querySelectorAll","input","checkboxes","indexOf","querySelector","classList","toggle","check","getElementById","setAttribute","handleCheck","split","RecipeHead","RecipeImage","RecipeInstructions","instructions","ShareButton","copyLink","setLoadMessage","smallRecipeCard","url","href","link","StartRecipesBtn","otherKey","recipeButtonText","setRecipeButtonText","disableButton","setDisableButton","handleButtonText","double","doubleRecipe","keys","Object","measure","stringMeasure","undefined","RecipesDetails","api2","recipeThumb","strRecipe","idIten","setDetails","setRecipes","loadMessage","handleFecthDetail","apiReturn","handleFecthRecipes","listOfIngredients","player","strYoutube","replace","strInstructions","whidth","height","frameBorder","ids","reload","RecipesInProgress","idItem","lsKey","disableFinishButton","match","handleFecthDetails","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","strTags","recipesInProgress","NotFound","App","basename","process","exact","component","Boolean","hostname","mealsToken","cocktailsToken","user","INITIAL_STATE","recipeList","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","subscribe","getState","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8e5349f3.chunk.js","sourcesContent":["export const LOGIN = 'LOGIN';\r\nexport const ENABLE_DISABLE_SEARCH_BAR = 'ENABLE_DISABLE_SEARCH_BAR';\r\nexport const ENABLE_BUTTON = 'ENABLE_BUTTON';\r\nexport const DISABLE_BUTTON = 'DISABLE_BUTTON';\r\nexport const SET_RECIPE_LIST = 'SET_RECIPE_LIST';\r\nexport const SET_DRINK_LIST = 'SET_DRINK_LIST';\r\nexport const SET_FOOD_LIST = 'SET_FOOD_LIST';\r\nexport const SET_RELOAD_LIST = 'SET_RELOAD_LIST';\r\nexport const ENABLE_DISABLE_FINISH_BUTTON = 'ENABLE_DISABLE_FINISH_BUTTON';\r\n\r\nexport const setUserEmail = (email) => ({\r\n  type: LOGIN, email,\r\n});\r\n\r\nexport const enableSearchBar = (change) => ({\r\n  type: ENABLE_DISABLE_SEARCH_BAR, change,\r\n});\r\n\r\nexport const enableButton = (change) => ({\r\n  type: ENABLE_BUTTON, change,\r\n});\r\n\r\nexport const disableButton = () => ({\r\n  type: DISABLE_BUTTON,\r\n});\r\n\r\nexport const setRecipeList = (payload) => ({\r\n  type: SET_RECIPE_LIST,\r\n  payload,\r\n});\r\n\r\nexport const setFoodList = (payload) => ({\r\n  type: SET_FOOD_LIST,\r\n  payload,\r\n});\r\n\r\nexport const setDrinkList = (payload) => ({\r\n  type: SET_DRINK_LIST,\r\n  payload,\r\n});\r\n\r\nexport const setReloadList = (value) => ({\r\n  type: SET_RELOAD_LIST,\r\n  value,\r\n});\r\n\r\nexport const setButtonState = (value) => ({\r\n  type: ENABLE_DISABLE_FINISH_BUTTON,\r\n  value,\r\n});\r\n","export const fetchRecipes = async (limit, api) => {\r\n  const response = await fetch(`https://www.${api}.com/api/json/v1/1/search.php?s=`);\r\n  const result = await response.json();\r\n  if (api === 'themealdb') {\r\n    return result.meals.slice(0, limit);\r\n  }\r\n  return result.drinks.slice(0, limit);\r\n};\r\n\r\nexport const fetchCategories = async (api, cat) => {\r\n  const numberOfButtons = 5;\r\n  const response = await fetch(`https://www.${api}.com/api/json/v1/1/list.php?${cat}=list`);\r\n  const result = await response.json();\r\n  if (cat === 'c' && api === 'themealdb') {\r\n    return result.meals.slice(0, numberOfButtons);\r\n  }\r\n  if (cat === 'a') {\r\n    return result.meals;\r\n  }\r\n  return result.drinks.slice(0, numberOfButtons);\r\n};\r\n\r\nexport const fetchRecipesByCategory = async (api, category) => {\r\n  const numberOfRecipes = 12;\r\n  const response = await fetch(`https://www.${api}.com/api/json/v1/1/filter.php?c=${category}`);\r\n  const result = await response.json();\r\n  if (api === 'themealdb') {\r\n    return result.meals.slice(0, numberOfRecipes);\r\n  }\r\n  return result.drinks.slice(0, numberOfRecipes);\r\n};\r\n\r\nexport const fetchDetails = async (api, id) => {\r\n  const response = await fetch(`https://www.${api}.com/api/json/v1/1/lookup.php?i=${id}`);\r\n  const result = await response.json();\r\n  if (api === 'themealdb') {\r\n    return result.meals;\r\n  }\r\n  if (!result.drinks) return [];\r\n  return result.drinks;\r\n};\r\n\r\n// função (slice) usada pra \"recortar\" o primeiro parametro no caso o primeiro indice do array de buttons;\r\nexport const fetchIngredients = async (limit, api) => {\r\n  const response = await fetch(`https://www.${api}.com/api/json/v1/1/list.php?i=list`);\r\n  const result = await response.json();\r\n  if (api === 'themealdb') {\r\n    return result.meals.slice(0, limit);\r\n  }\r\n  return result.drinks.slice(0, limit);\r\n};\r\n\r\nexport const fetchSearch = async (query, endpoint, api) => {\r\n  let response;\r\n  const numberOfRecipes = 12;\r\n  if (endpoint === 'ingredient') {\r\n    response = await fetch(`https://www.${api}.com/api/json/v1/1/filter.php?i=${query}`);\r\n  } else if (endpoint === 'name') {\r\n    response = await fetch(`https://www.${api}.com/api/json/v1/1/search.php?s=${query}`);\r\n  } else {\r\n    response = await fetch(`https://www.${api}.com/api/json/v1/1/search.php?f=${query}`);\r\n  }\r\n  const result = await response.json();\r\n\r\n  if (api === 'themealdb' && result.meals !== null) {\r\n    return result.meals.slice(0, numberOfRecipes);\r\n  } if (api === 'thecocktaildb' && result.drinks !== null) {\r\n    return result.drinks.slice(0, numberOfRecipes);\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const fetchCountry = async (country) => {\r\n  const numberOfRecipes = 12;\r\n  const response = await fetch(`https://www.themealdb.com/api/json/v1/1/filter.php?a=${country}`);\r\n  const result = await response.json();\r\n  if (country !== null) {\r\n    const final = result.meals.slice(0, numberOfRecipes);\r\n    return final;\r\n  }\r\n};\r\n\r\nexport const fetchIngredientsFilter = async (limit, api, ingredient) => {\r\n  const response = await fetch(`https://www.${api}.com/api/json/v1/1/filter.php?i=${ingredient}`);\r\n  const result = await response.json();\r\n  if (api === 'themealdb') {\r\n    return result.meals.slice(0, limit);\r\n  }\r\n  return result.drinks.slice(0, limit);\r\n};\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { setDrinkList, setFoodList } from '../redux/actions';\r\nimport { fetchSearch } from '../services/requests';\r\nimport '../styles/search.css';\r\nimport helpSearch, { getPathAndApi } from '../utils/helpSearch';\r\n\r\nconst SearchBar = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const initialState = {\r\n    search: '',\r\n    searchCategory: '',\r\n  };\r\n  const firstRender = useRef(true);\r\n  const path = history.location.pathname;\r\n  const [state, setState] = useState(initialState);\r\n  const [searchResults, setSearchResults] = useState([]);\r\n\r\n  const pathRecipes = getPathAndApi('pathRecipes', path);\r\n  const api = getPathAndApi('api', path);\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    setState({\r\n      ...state,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSearchResults = () => {\r\n    if (firstRender.current) {\r\n      firstRender.current = false;\r\n    } else if (searchResults === null) {\r\n      global.alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\r\n    } else if (searchResults.length === 1) {\r\n      const newPath = helpSearch(searchResults, path);\r\n      history.push(newPath);\r\n    } else {\r\n      if (path.includes('comidas')) {\r\n        dispatch(setFoodList(searchResults));\r\n      } else {\r\n        dispatch(setDrinkList(searchResults));\r\n      }\r\n      history.push(pathRecipes);\r\n    }\r\n  };\r\n\r\n  const handleFetchSearch = async (query, endpoint) => {\r\n    const results = await fetchSearch(query, endpoint, api);\r\n    setSearchResults(results);\r\n  };\r\n\r\n  const resetSerchFields = () => {\r\n    const radioButtons = document.getElementsByName('searchCategory');\r\n    radioButtons.forEach((radio) => {\r\n      radio.checked = false;\r\n    });\r\n    setState(initialState);\r\n  };\r\n\r\n  const handleClick = async () => {\r\n    const query = state.search;\r\n    const endpoint = state.searchCategory;\r\n\r\n    if (query.length > 1 && endpoint === 'firstLetter') {\r\n      global.alert('Sua busca deve conter somente 1 (um) caracter');\r\n    } else if (query !== '' && endpoint !== '') {\r\n      await handleFetchSearch(query, endpoint);\r\n    }\r\n    resetSerchFields();\r\n  };\r\n\r\n  useEffect(handleSearchResults, [searchResults, history, path, dispatch, pathRecipes]);\r\n\r\n  return (\r\n    <div className=\"search-bar\">\r\n      <div>\r\n        <input\r\n          placeholder=\"Busque por uma receita\"\r\n          onChange={ handleChange }\r\n          value={ state.search }\r\n          name=\"search\"\r\n          data-testid=\"search-input\"\r\n          type=\"text\"\r\n          className=\"input-search\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"ingredient-search\">\r\n          <input\r\n            onChange={ handleChange }\r\n            value=\"ingredient\"\r\n            name=\"searchCategory\"\r\n            id=\"ingredient-search\"\r\n            data-testid=\"ingredient-search-radio\"\r\n            type=\"radio\"\r\n          />\r\n          Ingrediente\r\n        </label>\r\n        <label htmlFor=\"name-search\">\r\n          <input\r\n            onChange={ handleChange }\r\n            value=\"name\"\r\n            name=\"searchCategory\"\r\n            id=\"name-search\"\r\n            data-testid=\"name-search-radio\"\r\n            type=\"radio\"\r\n          />\r\n          Nome\r\n        </label>\r\n        <label htmlFor=\"first-letter-search\">\r\n          <input\r\n            onChange={ handleChange }\r\n            value=\"firstLetter\"\r\n            name=\"searchCategory\"\r\n            id=\"first-letter-search\"\r\n            data-testid=\"first-letter-search-radio\"\r\n            type=\"radio\"\r\n          />\r\n          Primeira letra\r\n        </label>\r\n      </div>\r\n      <button\r\n        type=\"button\"\r\n        data-testid=\"exec-search-btn\"\r\n        onClick={ handleClick }\r\n      >\r\n        Buscar\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","module.exports = __webpack_public_path__ + \"static/media/shareIcon.06215ed4.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiteHeartIcon.ea3b6ba8.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackHeartIcon.b8913346.svg\";","const helpSearch = (searchResults, path) => {\r\n  if (path.includes('comidas')) {\r\n    return `/comidas/${searchResults[0].idMeal}`;\r\n  }\r\n  return `/bebidas/${searchResults[0].idDrink}`;\r\n};\r\n\r\nexport const getPathAndApi = (option, path) => {\r\n  if (path.includes('comidas')) {\r\n    if (option === 'api') {\r\n      return 'themealdb';\r\n    }\r\n    return '/comidas';\r\n  }\r\n  if (option === 'api') {\r\n    return 'thecocktaildb';\r\n  }\r\n  return '/bebidas';\r\n};\r\n\r\nexport default helpSearch;\r\n","module.exports = __webpack_public_path__ + \"static/media/drinkIcon.f87c47c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/exploreIcon.157945ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/mealIcon.b27ba19e.svg\";","module.exports = __webpack_public_path__ + \"static/media/profileIcon.74e487e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/searchIcon.db812135.svg\";","module.exports = __webpack_public_path__ + \"static/media/loginIcon.5eeb733d.svg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport drinkIcon from '../images/drinkIcon.svg';\nimport exploreIcon from '../images/exploreIcon.svg';\nimport mealIcon from '../images/mealIcon.svg';\nimport '../App.css';\n\nfunction Footer() {\n  return (\n    <footer\n      data-testid=\"footer\"\n      className=\"footer-style\"\n    >\n      <Link to=\"/bebidas\">\n        <img\n          data-testid=\"drinks-bottom-btn\"\n          src={ drinkIcon }\n          alt=\"Icone de Bebidas\"\n        />\n      </Link>\n      <Link to=\"/explorar\">\n        <img\n          data-testid=\"explore-bottom-btn\"\n          src={ exploreIcon }\n          alt=\"Icone de Exploração\"\n        />\n      </Link>\n      <Link to=\"/comidas\">\n        <img\n          data-testid=\"food-bottom-btn\"\n          src={ mealIcon }\n          alt=\"Icone de Comidas\"\n        />\n      </Link>\n    </footer>\n  );\n}\n\nexport default Footer;\n","const getPlaceholder = (path) => {\n  switch (path) {\n  case '/comidas':\n    return 'Comidas';\n  case '/bebidas':\n    return 'Bebidas';\n  case '/explorar':\n    return 'Explorar';\n  case '/explorar/comidas':\n    return 'Explorar Comidas';\n  case '/explorar/bebidas':\n    return 'Explorar Bebidas';\n  case '/explorar/comidas/ingredientes':\n    return 'Explorar Ingredientes';\n  case '/explorar/bebidas/ingredientes':\n    return 'Explorar Ingredientes';\n  case '/explorar/comidas/area':\n    return 'Explorar Origem';\n  case '/perfil':\n    return 'Perfil';\n  case '/receitas-feitas':\n    return 'Receitas Feitas';\n  case '/receitas-favoritas':\n    return 'Receitas Favoritas';\n  default:\n    return '';\n  }\n};\n\nexport default getPlaceholder;\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport profileIcon from '../images/profileIcon.svg';\r\nimport searchIcon from '../images/searchIcon.svg';\r\nimport { enableSearchBar, enableButton } from '../redux/actions';\r\nimport '../styles/header.css';\r\nimport getPlaceholder from '../utils/getPlaceholder';\r\n\r\nfunction Header() {\r\n  const enable = (\r\n    useSelector(({ functionsReducer }) => functionsReducer.enableButton)\r\n  );\r\n  const enableSearch = (\r\n    useSelector(({ functionsReducer }) => functionsReducer.enableSearch)\r\n  );\r\n\r\n  const [state, setState] = useState('');\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const handleClick = () => {\r\n    dispatch(enableSearchBar(!enableSearch));\r\n  };\r\n\r\n  const historico = history.location.pathname;\r\n\r\n  const handleProfile = () => {\r\n    if (historico !== '/perfil') {\r\n      history.push('/perfil');\r\n    }\r\n  };\r\n\r\n  const handleSearchButton = () => {\r\n    if (historico === '/comidas' || historico === '/bebidas'\r\n     || historico === '/explorar/comidas/area') {\r\n      dispatch(enableButton(true));\r\n    } else {\r\n      dispatch(enableButton(false));\r\n    }\r\n  };\r\n\r\n  useEffect(handleSearchButton, [dispatch, historico]);\r\n\r\n  useEffect(() => {\r\n    setState(getPlaceholder(historico));\r\n  }, [historico]);\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"btn-profile\">\r\n        <button\r\n          type=\"button\"\r\n          onClick={ handleProfile }\r\n        >\r\n          <img src={ profileIcon } alt=\"profile\" data-testid=\"profile-top-btn\" />\r\n        </button>\r\n      </div>\r\n      <div className=\"header-title\">\r\n        <h3\r\n          data-testid=\"page-title\"\r\n        >\r\n          {state}\r\n        </h3>\r\n      </div>\r\n      <div className=\"btn-search\">\r\n        { enable && (\r\n          <button\r\n            type=\"button\"\r\n            onClick={ handleClick }\r\n          >\r\n            <img src={ searchIcon } alt=\"search\" data-testid=\"search-top-btn\" />\r\n          </button>)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction RecipeCard({ id, name, path, thumb }) {\r\n  return (\r\n    <div data-testid={ `${id}-recipe-card` } className=\"item-card\">\r\n      <Link to={ `${path}` }>\r\n        <h4 data-testid={ `${id}-card-name` }>{ name }</h4>\r\n        <img src={ thumb } alt={ name } data-testid={ `${id}-card-img` } />\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nRecipeCard.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  thumb: PropTypes.string.isRequired,\r\n  path: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default RecipeCard;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Footer from '../components/Footer';\r\nimport Header from '../components/Header';\r\nimport SearchBar from '../components/SearchBar';\r\nimport RecipeCard from '../components/RecipeCard';\r\nimport {\r\n  fetchCategories,\r\n  fetchRecipes,\r\n  fetchRecipesByCategory,\r\n} from '../services/requests';\r\nimport { enableSearchBar, setDrinkList, setReloadList } from '../redux/actions';\r\n\r\nfunction Drinks() {\r\n  const enableSearch = (\r\n    useSelector(({ functionsReducer }) => functionsReducer.enableSearch)\r\n  );\r\n  // const recipeList = useSelector(({ recipes }) => recipes.recipeList);\r\n  const drinkList = useSelector(({ recipes }) => recipes.drinkList);\r\n  const reloadList = useSelector(({ recipes }) => recipes.reloadList);\r\n  const dispatch = useDispatch();\r\n\r\n  const [categoriesList, setCategoriesList] = useState([{ strCategory: 'All' }]);\r\n  const [filterCategory, setFilterCategory] = useState('');\r\n  const firstRender = useRef(true);\r\n\r\n  const handleDrinksList = async () => {\r\n    const limit = 12;\r\n    const newDrinksList = await fetchRecipes(limit, 'thecocktaildb');\r\n    // dispatch(setRecipeList(newDrinksList));\r\n    dispatch(setDrinkList(newDrinksList));\r\n  };\r\n\r\n  const handleCategoriesList = async () => {\r\n    const newCategoriesList = await fetchCategories('thecocktaildb', 'c');\r\n    setCategoriesList([...categoriesList, ...newCategoriesList]);\r\n  };\r\n\r\n  const handleFetchByCategory = async (category) => {\r\n    const newDrinksList = await fetchRecipesByCategory('thecocktaildb', category);\r\n    // dispatch(setRecipeList(newDrinksList));\r\n    dispatch(setDrinkList(newDrinksList));\r\n  };\r\n\r\n  const handleFilter = ({ target }) => {\r\n    const category = target.innerHTML;\r\n    if (category === 'All') {\r\n      handleDrinksList();\r\n    } else if (filterCategory !== category) {\r\n      handleFetchByCategory(category);\r\n      setFilterCategory(category);\r\n    } else {\r\n      handleDrinksList();\r\n      setFilterCategory('');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (firstRender.current) {\r\n      firstRender.current = false;\r\n      handleCategoriesList();\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (reloadList) {\r\n      handleDrinksList();\r\n      dispatch(setReloadList(false));\r\n    }\r\n  });\r\n\r\n  useEffect(() => () => {\r\n    dispatch(setReloadList(true));\r\n    dispatch(enableSearchBar(false));\r\n    dispatch(setDrinkList([]));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      {enableSearch && <SearchBar />}\r\n      <div className=\"category-list\">\r\n        {!enableSearch && (categoriesList.length > 1 ? (\r\n          categoriesList.map(({ strCategory }) => (\r\n            <button\r\n              type=\"button\"\r\n              key={ strCategory }\r\n              onClick={ handleFilter }\r\n              data-testid={ `${strCategory}-category-filter` }\r\n            >\r\n              {strCategory}\r\n            </button>)))\r\n          : <p>loading</p>)}\r\n      </div>\r\n      <div className=\"item-card-container\">\r\n        {drinkList.map(({ idDrink, strDrink, strDrinkThumb }, index) => (<RecipeCard\r\n          key={ idDrink }\r\n          recipeId={ idDrink }\r\n          id={ index }\r\n          name={ strDrink }\r\n          path={ `bebidas/${idDrink}` }\r\n          api=\"thecocktaildb\"\r\n          thumb={ strDrinkThumb }\r\n        />))}\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Drinks;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport Footer from '../components/Footer';\r\nimport Header from '../components/Header';\r\nimport '../styles/explore.css';\r\n\r\nfunction Explore() {\r\n  const history = useHistory();\r\n\r\n  const handleExplore = ({ target }) => {\r\n    const text = target.innerHTML;\r\n    if (text === 'Explorar Comidas') {\r\n      history.push('/explorar/comidas');\r\n    }\r\n    if (text === 'Explorar Bebidas') {\r\n      history.push('/explorar/bebidas');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"explore-container\">\r\n        <button\r\n          type=\"button\"\r\n          onClick={ handleExplore }\r\n          className=\"explore-button\"\r\n          data-testid=\"explore-food\"\r\n        >\r\n          Explorar Comidas\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={ handleExplore }\r\n          className=\"explore-button\"\r\n          data-testid=\"explore-drinks\"\r\n        >\r\n          Explorar Bebidas\r\n        </button>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Explore;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filters = ({ setFilters }) => {\r\n  const handleClick = ({ target }) => {\r\n    const text = target.innerHTML;\r\n    if (text === 'All') {\r\n      setFilters('all');\r\n    } else if (text === 'Foods') {\r\n      setFilters('comida');\r\n    } else if (text === 'Drinks') {\r\n      setFilters('bebida');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"btns-filter\">\r\n      <button\r\n        type=\"button\"\r\n        data-testid=\"filter-by-all-btn\"\r\n        onClick={ handleClick }\r\n      >\r\n        All\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        data-testid=\"filter-by-food-btn\"\r\n        onClick={ handleClick }\r\n      >\r\n        Foods\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        data-testid=\"filter-by-drink-btn\"\r\n        onClick={ handleClick }\r\n      >\r\n        Drinks\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilters.propTypes = {\r\n  setFilters: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filters;\r\n","const favoriteButtonHelper = (isFavoritePage, path, details) => {\r\n  if (isFavoritePage) {\r\n    return {\r\n      id: details.id,\r\n      name: details.name,\r\n      image: details.image,\r\n      alcoholicOrNot: details.alcoholicOrNot,\r\n      area: details.area,\r\n      type: details.type,\r\n      category: details.category,\r\n    };\r\n  } if (path.includes('comidas')) {\r\n    return {\r\n      id: details.idMeal,\r\n      name: details.strMeal,\r\n      image: details.strMealThumb,\r\n      alcoholicOrNot: '',\r\n      area: details.strArea,\r\n      type: 'comida',\r\n      category: details.strCategory,\r\n    };\r\n  }\r\n  return {\r\n    id: details.idDrink,\r\n    name: details.strDrink,\r\n    image: details.strDrinkThumb,\r\n    alcoholicOrNot: details.strAlcoholic,\r\n    area: '',\r\n    type: 'bebida',\r\n    category: details.strCategory,\r\n  };\r\n};\r\n\r\nexport default favoriteButtonHelper;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useLocation } from 'react-router';\r\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\r\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\r\nimport favoriteButtonHelper from '../utils/favoriteButtonHelper';\r\n\r\nfunction FavoriteButton({ details, isFavoritePage, handleReload, testid }) {\r\n  const [image, setImage] = useState(whiteHeartIcon);\r\n  const location = useLocation();\r\n  const path = location.pathname;\r\n\r\n  const favorite = favoriteButtonHelper(isFavoritePage, path, details);\r\n  const { id } = favorite;\r\n\r\n  useEffect(() => {\r\n    if (localStorage.favoriteRecipes) {\r\n      const recipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\r\n      const isFavorite = recipes.some((element) => element.id === id);\r\n      if (isFavorite) {\r\n        setImage(blackHeartIcon);\r\n      }\r\n    }\r\n  }, [id]);\r\n\r\n  const handleFavorite = () => {\r\n    if (image === blackHeartIcon) {\r\n      setImage(whiteHeartIcon);\r\n      const favItem = JSON.parse(localStorage.getItem('favoriteRecipes'));\r\n      const favFiltered = favItem.filter((element) => element.id !== id);\r\n      localStorage.setItem('favoriteRecipes', JSON.stringify(favFiltered));\r\n      localStorage.setItem('img', whiteHeartIcon);\r\n    } if (image === whiteHeartIcon) {\r\n      setImage(blackHeartIcon);\r\n      localStorage.setItem('img', blackHeartIcon);\r\n      if (!localStorage.getItem('favoriteRecipes')) {\r\n        localStorage.setItem('favoriteRecipes', JSON.stringify([favorite]));\r\n      } else {\r\n        const exist = JSON.parse(localStorage.getItem('favoriteRecipes'));\r\n        const arr = [...exist, favorite];\r\n        localStorage.setItem('favoriteRecipes', JSON.stringify(arr));\r\n      }\r\n    }\r\n    if (isFavoritePage) {\r\n      handleReload();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <input\r\n      type=\"image\"\r\n      data-testid={ testid }\r\n      onClick={ handleFavorite }\r\n      src={ image }\r\n      alt=\"favorite\"\r\n    />\r\n  );\r\n}\r\n\r\nFavoriteButton.propTypes = {\r\n  details: PropTypes.objectOf(PropTypes.string).isRequired,\r\n  isFavoritePage: PropTypes.bool.isRequired,\r\n  handleReload: PropTypes.func,\r\n  testid: PropTypes.string.isRequired,\r\n};\r\n\r\nFavoriteButton.defaultProps = {\r\n  handleReload: () => console.log('oi'),\r\n};\r\n\r\nexport default FavoriteButton;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport FavoriteButton from './FavoriteButton';\r\nimport shareIcon from '../images/shareIcon.svg';\r\n\r\nconst copy = require('clipboard-copy');\r\n\r\nfunction SmallRecipeCard({ recipes, isFavoritePage, handleReload }) {\r\n  const [message, setMessage] = useState(false);\r\n  const [messageIndex, setMessageIndex] = useState();\r\n\r\n  const changeMessage = (index) => {\r\n    setMessageIndex(index);\r\n    const time = 2000;\r\n    setMessage(true);\r\n    setTimeout(() => {\r\n      setMessage(false);\r\n    }, time);\r\n  };\r\n\r\n  const orig = window.location.origin;\r\n  return (\r\n    <div>\r\n      {recipes ? recipes\r\n        .map((recipe, index) => (\r\n          <div key={ index } className=\"doneRecipe\">\r\n            <div>\r\n              <Link to={ `/${recipe.type}s/${recipe.id}` }>\r\n                <img\r\n                  src={ recipe.image }\r\n                  alt={ recipe.name }\r\n                  data-testid={ `${index}-horizontal-image` }\r\n                />\r\n              </Link>\r\n            </div>\r\n            <div className=\"items-list\">\r\n              <div className=\"head-done\">\r\n                <div\r\n                  data-testid={ `${index}-horizontal-top-text` }\r\n                  className=\"top-text\"\r\n                >\r\n                  {recipe.type === 'comida'\r\n                    ? <p>{`${recipe.area} - ${recipe.category}`}</p>\r\n                    : <p>{recipe.alcoholicOrNot}</p>}\r\n                </div>\r\n                <input\r\n                  type=\"image\"\r\n                  className=\"share-btn\"\r\n                  data-testid={ `${index}-horizontal-share-btn` }\r\n                  onClick={ () => {\r\n                    (copy(`${orig}/${recipe.type}s/${recipe.id}`));\r\n                    changeMessage(index);\r\n                  } }\r\n                  src={ shareIcon }\r\n                  alt=\"share\"\r\n                />\r\n                {isFavoritePage && (<FavoriteButton\r\n                  handleReload={ handleReload }\r\n                  testid={ `${index}-horizontal-favorite-btn` }\r\n                  isFavoritePage\r\n                  details={ recipe }\r\n                />)}\r\n              </div>\r\n              {/* Matheus Duarte me ajudou a pensar nisso */}\r\n              {index === messageIndex\r\n                ? <p hidden={ !message }> Link copiado! </p> : ''}\r\n              <Link to={ `/${recipe.type}s/${recipe.id}` }>\r\n                <p className=\"title\" data-testid={ `${index}-horizontal-name` }>\r\n                  {recipe.name}\r\n                </p>\r\n              </Link>\r\n              {!isFavoritePage && (\r\n                <p data-testid={ `${index}-horizontal-done-date` }>\r\n                  {`Feito em: ${recipe.doneDate}`}\r\n                </p>)}\r\n              <div className=\"tags\">\r\n                {recipe.tags ? recipe.tags.splice(0, 2).map((item, i) => (\r\n                  <p key={ i } data-testid={ `${index}-${item}-horizontal-tag` }>\r\n                    {item}\r\n                  </p>\r\n                )) : ''}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )) : 'loading'}\r\n    </div>\r\n  );\r\n}\r\n\r\nSmallRecipeCard.propTypes = {\r\n  recipes: PropTypes.arrayOf(\r\n    PropTypes.object,\r\n  ).isRequired,\r\n  isFavoritePage: PropTypes.bool.isRequired,\r\n  handleReload: PropTypes.func,\r\n};\r\n\r\nSmallRecipeCard.defaultProps = {\r\n  handleReload: () => console.log('oi'),\r\n};\r\n\r\nexport default SmallRecipeCard;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Filters from '../components/Filters';\r\nimport Header from '../components/Header';\r\nimport SmallRecipeCard from '../components/SmallRecipeCard';\r\n\r\nfunction FavoriteRecipes() {\r\n  const favoritesRecipes = JSON\r\n    .parse(localStorage.getItem('favoriteRecipes'));\r\n\r\n  const [favorites, setFavorites] = useState(favoritesRecipes);\r\n  const [filters, setFilters] = useState('all');\r\n\r\n  useEffect(() => {\r\n    if (filters === 'all') {\r\n      setFavorites(favoritesRecipes);\r\n    } else {\r\n      setFavorites(favoritesRecipes.filter((done) => done.type === filters));\r\n    }\r\n  }, [filters]);\r\n\r\n  const reloadFavorites = () => {\r\n    setFavorites(JSON\r\n      .parse(localStorage.getItem('favoriteRecipes')));\r\n  };\r\n\r\n  if (!favorites || favorites.length === 0) {\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <p>Opa, nenhuma receita favoritada!</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Filters setFilters={ setFilters } />\r\n      {favorites ? (\r\n        <SmallRecipeCard\r\n          handleReload={ reloadFavorites }\r\n          isFavoritePage\r\n          recipes={ favorites }\r\n        />) : 'Nenhuma receita favoritada'}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FavoriteRecipes;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Footer from '../components/Footer';\r\nimport Header from '../components/Header';\r\nimport SearchBar from '../components/SearchBar';\r\nimport RecipeCard from '../components/RecipeCard';\r\nimport {\r\n  fetchCategories,\r\n  fetchRecipes,\r\n  fetchRecipesByCategory,\r\n} from '../services/requests';\r\nimport '../styles/itemCard.css';\r\nimport { enableSearchBar, setFoodList, setReloadList } from '../redux/actions';\r\n\r\nconst Foods = () => {\r\n  const firstRender = useRef(true);\r\n  const dispatch = useDispatch();\r\n  const foodList = useSelector(({ recipes }) => recipes.foodList);\r\n  const reloadList = useSelector(({ recipes }) => recipes.reloadList);\r\n  const enableSearch = (\r\n    useSelector(({ functionsReducer }) => functionsReducer.enableSearch)\r\n  );\r\n  const [categoriesList, setCategoriesList] = useState([{ strCategory: 'All' }]);\r\n  const [filterCategory, setFilterCategory] = useState('');\r\n\r\n  const handleFoodsList = async () => {\r\n    const limit = 12;\r\n    const newFoodsList = await fetchRecipes(limit, 'themealdb');\r\n    dispatch(setFoodList(newFoodsList));\r\n  };\r\n\r\n  const handleCategoriesList = async () => {\r\n    const newCategoriesList = await fetchCategories('themealdb', 'c');\r\n    setCategoriesList(categoriesList.concat(newCategoriesList));\r\n  };\r\n\r\n  const handleFetchByCategory = async (category) => {\r\n    const newFoodsList = await fetchRecipesByCategory('themealdb', category);\r\n    dispatch(setFoodList(newFoodsList));\r\n  };\r\n\r\n  const handleFilter = ({ target }) => {\r\n    const category = target.innerHTML;\r\n    if (category === 'All') {\r\n      handleFoodsList();\r\n    } else if (filterCategory !== category) {\r\n      handleFetchByCategory(category);\r\n      setFilterCategory(category);\r\n    } else {\r\n      setFilterCategory('');\r\n      handleFoodsList();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (firstRender.current) {\r\n      firstRender.current = false;\r\n      handleCategoriesList();\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (reloadList) {\r\n      handleFoodsList();\r\n      dispatch(setReloadList(false));\r\n    }\r\n  });\r\n\r\n  useEffect(() => () => {\r\n    dispatch(setReloadList(true));\r\n    dispatch(enableSearchBar(false));\r\n    dispatch(setFoodList([]));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      {enableSearch && <SearchBar />}\r\n      <div className=\"category-list\">\r\n        {!enableSearch && (categoriesList.length > 1 ? (\r\n          categoriesList.map(({ strCategory }) => (\r\n            <button\r\n              type=\"button\"\r\n              key={ strCategory }\r\n              onClick={ handleFilter }\r\n              data-testid={ `${strCategory}-category-filter` }\r\n            >\r\n              {strCategory}\r\n            </button>)))\r\n          : <p>loading</p>)}\r\n      </div>\r\n      <div className=\"item-card-container\">\r\n        {foodList.map(({ idMeal, strMeal, strMealThumb }, index) => (<RecipeCard\r\n          key={ idMeal }\r\n          recipeId={ idMeal }\r\n          id={ index }\r\n          name={ strMeal }\r\n          path={ `comidas/${idMeal}` }\r\n          api=\"themealdb\"\r\n          thumb={ strMealThumb }\r\n        />))}\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Foods;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { setUserEmail } from '../redux/actions/index';\r\nimport '../styles/login.css';\r\nimport loginIcon from '../images/loginIcon.svg';\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const [state, setState] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const [valid, setValid] = useState(false);\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    setState({\r\n      ...state,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(setUserEmail(state.email));\r\n\r\n    history.push('/comidas');\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.title = 'Recipes App';\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const isValid = /\\S+@\\S+\\.\\S+/;\r\n    const teste = isValid.test(state.email);\r\n    const MIN_SIZE = 6;\r\n    if (teste && state.password.length > MIN_SIZE) {\r\n      setValid(true);\r\n    } else {\r\n      setValid(false);\r\n    }\r\n  }, [state]);\r\n\r\n  return (\r\n    <div className=\"form-login\">\r\n      <img src={ loginIcon } alt=\"login icon\" />\r\n      <form action=\"\" className=\"form\">\r\n        <input\r\n          type=\"text\"\r\n          data-testid=\"email-input\"\r\n          name=\"email\"\r\n          value={ state.email }\r\n          onChange={ handleChange }\r\n          placeholder=\"Email\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          data-testid=\"password-input\"\r\n          name=\"password\"\r\n          value={ state.password }\r\n          placeholder=\"Password\"\r\n          onChange={ handleChange }\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          data-testid=\"login-submit-btn\"\r\n          disabled={ !valid }\r\n          onClick={ handleSubmit }\r\n          className=\"btn-login\"\r\n        >\r\n          Entrar\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport Footer from '../components/Footer';\r\nimport Header from '../components/Header';\r\nimport SearchBar from '../components/SearchBar';\r\nimport '../styles/profile.css';\r\n\r\nfunction Profile() {\r\n  const history = useHistory();\r\n  let userEmail = JSON.parse(localStorage.getItem('user'));\r\n  if (userEmail === null) {\r\n    userEmail = '';\r\n  } else {\r\n    userEmail = userEmail.email;\r\n  }\r\n\r\n  const enableSearch = (\r\n    useSelector(({ functionsReducer }) => functionsReducer.enableSearch)\r\n  );\r\n\r\n  const handleClick = ({ target }) => {\r\n    const text = target.innerHTML;\r\n    if (text === 'Receitas Feitas') {\r\n      history.push('/receitas-feitas');\r\n    }\r\n    if (text === 'Receitas Favoritas') {\r\n      history.push('/receitas-favoritas');\r\n    }\r\n  };\r\n\r\n  const handleLeave = () => {\r\n    localStorage.clear();\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      {enableSearch && <SearchBar />}\r\n      <div className=\"btns-profile\">\r\n        <h3 data-testid=\"profile-email\">{ userEmail }</h3>\r\n        <button\r\n          data-testid=\"profile-done-btn\"\r\n          type=\"button\"\r\n          onClick={ handleClick }\r\n        >\r\n          Receitas Feitas\r\n        </button>\r\n        <button\r\n          data-testid=\"profile-favorite-btn\"\r\n          type=\"button\"\r\n          onClick={ handleClick }\r\n        >\r\n          Receitas Favoritas\r\n        </button>\r\n        <button\r\n          data-testid=\"profile-logout-btn\"\r\n          type=\"button\"\r\n          onClick={ handleLeave }\r\n        >\r\n          Sair\r\n        </button>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport shareIcon from '../images/shareIcon.svg';\r\n\r\nconst copy = require('clipboard-copy');\r\n\r\nfunction DoneCards({ doneRecipes }) {\r\n  const [message, setMessage] = useState(false);\r\n  const history = useHistory();\r\n  const [messageIndex, setMessageIndex] = useState();\r\n\r\n  const changeMessage = (index) => {\r\n    setMessageIndex(index);\r\n    const time = 2000;\r\n    setMessage(true);\r\n    setTimeout(() => {\r\n      setMessage(false);\r\n    }, time);\r\n  };\r\n\r\n  const changeRoute = (type, id) => {\r\n    history.push(`/${type}s/${id}`);\r\n  };\r\n\r\n  const orig = window.location.origin;\r\n  return (\r\n    <div>\r\n      {doneRecipes ? doneRecipes\r\n        .map(({\r\n          id, area, type, category, doneDate, image, name, tags, alcoholicOrNot,\r\n        }, index) => (\r\n          <div key={ index } className=\"doneRecipe\">\r\n            <div>\r\n              <Link to={ `/${type}s/${id}` }>\r\n                <img\r\n                  src={ image }\r\n                  alt={ name }\r\n                  data-testid={ `${index}-horizontal-image` }\r\n                />\r\n              </Link>\r\n            </div>\r\n            <div className=\"items-list\">\r\n              <div className=\"head-done\">\r\n                <div\r\n                  data-testid={ `${index}-horizontal-top-text` }\r\n                  className=\"top-text\"\r\n                >\r\n                  {type === 'comida'\r\n                    ? <p>{`${area} - ${category}`}</p> : <p>{alcoholicOrNot}</p>}\r\n                </div>\r\n                <input\r\n                  type=\"image\"\r\n                  className=\"share-btn\"\r\n                  data-testid={ `${index}-horizontal-share-btn` }\r\n                  onClick={ () => {\r\n                    (copy(`${orig}/${type}s/${id}`));\r\n                    changeMessage(index);\r\n                  } }\r\n                  src={ shareIcon }\r\n                  alt=\"share\"\r\n                />\r\n              </div>\r\n              <button\r\n                onClick={ () => changeRoute(type, id) }\r\n                type=\"button\"\r\n                className=\"title-btn\"\r\n              >\r\n                <p\r\n                  className=\"title\"\r\n                  data-testid={ `${index}-horizontal-name` }\r\n                >\r\n                  {name}\r\n\r\n                </p>\r\n              </button>\r\n              {/* Matheus Duarte me ajudou a pensar nisso */}\r\n              {index === messageIndex\r\n                ? <span hidden={ !message }> Link copiado! </span> : ''}\r\n              <p data-testid={ `${index}-horizontal-done-date` }>\r\n                {`Feito em: ${doneDate}`}\r\n              </p>\r\n              <div className=\"tags\">\r\n                {tags ? tags.slice(0, 2).map((item, i) => (\r\n                  <p key={ i } data-testid={ `${index}-${item}-horizontal-tag` }>\r\n                    {item}\r\n                  </p>\r\n                )) : ''}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )) : 'loading'}\r\n    </div>\r\n  );\r\n}\r\n\r\nDoneCards.propTypes = {\r\n  doneRecipes: PropTypes.arrayOf(\r\n    PropTypes.object,\r\n  ).isRequired,\r\n};\r\n\r\nexport default DoneCards;\r\n","import React, { useEffect, useState } from 'react';\r\nimport DoneCards from '../components/DoneCards';\r\nimport Header from '../components/Header';\r\nimport '../styles/doneRecipes.css';\r\n\r\nfunction RecipesDone() {\r\n  const recipes = JSON.parse(localStorage.getItem('doneRecipes'));\r\n  const [doneRecipes, setDoneRecipes] = useState(recipes);\r\n  const [filters, setFilters] = useState('all');\r\n\r\n  useEffect(() => {\r\n    if (filters === 'all') {\r\n      setDoneRecipes(recipes);\r\n    } else {\r\n      setDoneRecipes(recipes.filter((done) => done.type === filters));\r\n    }\r\n  }, [filters]);\r\n\r\n  const handleClick = ({ target }) => {\r\n    const text = target.innerHTML;\r\n    if (text === 'All') {\r\n      setFilters('all');\r\n    } else if (text === 'Foods') {\r\n      setFilters('comida');\r\n    } else if (text === 'Drinks') {\r\n      setFilters('bebida');\r\n    }\r\n  };\r\n\r\n  if (!recipes || recipes.length === 0) {\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <p>Opa, nenhuma receita finalizada!</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div>\r\n        <div className=\"btns-filter\">\r\n          <button\r\n            type=\"button\"\r\n            data-testid=\"filter-by-all-btn\"\r\n            onClick={ handleClick }\r\n          >\r\n            All\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            data-testid=\"filter-by-food-btn\"\r\n            onClick={ handleClick }\r\n          >\r\n            Foods\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            data-testid=\"filter-by-drink-btn\"\r\n            onClick={ handleClick }\r\n          >\r\n            Drinks\r\n          </button>\r\n        </div>\r\n        <DoneCards doneRecipes={ doneRecipes } />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecipesDone;\r\n","export async function fetchRandomFood() {\r\n  const randomFood = await fetch('https://www.themealdb.com/api/json/v1/1/random.php');\r\n  return randomFood.json();\r\n}\r\n\r\nexport async function fetchRandomDrink() {\r\n  const randomDrink = await fetch('https://www.thecocktaildb.com/api/json/v1/1/random.php');\r\n  return randomDrink.json();\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport Footer from '../components/Footer';\r\nimport Header from '../components/Header';\r\nimport { fetchRandomFood } from '../services/randomsRequests';\r\n\r\nfunction ExploreFoods() {\r\n  const [randomFoodId, setRandomFoodId] = useState(0);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    fetchRandomFood()\r\n      .then((response) => setRandomFoodId(response.meals[0].idMeal));\r\n  }, []);\r\n\r\n  const handleClick = ({ target }) => {\r\n    const text = target.innerHTML;\r\n    if (text === 'Por Ingredientes') {\r\n      history.push('/explorar/comidas/ingredientes');\r\n    }\r\n    if (text === 'Por Local de Origem') {\r\n      history.push('/explorar/comidas/area');\r\n    }\r\n    if (text === 'Me Surpreenda!') {\r\n      history.push(`/comidas/${randomFoodId}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"explore-container\">\r\n        <button\r\n          type=\"button\"\r\n          onClick={ handleClick }\r\n          data-testid=\"explore-by-ingredient\"\r\n          className=\"explore-button\"\r\n        >\r\n          Por Ingredientes\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={ handleClick }\r\n          data-testid=\"explore-by-area\"\r\n          className=\"explore-button\"\r\n        >\r\n          Por Local de Origem\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={ handleClick }\r\n          data-testid=\"explore-surprise\"\r\n          className=\"explore-button\"\r\n        >\r\n          Me Surpreenda!\r\n        </button>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExploreFoods;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport Footer from '../components/Footer';\r\nimport Header from '../components/Header';\r\nimport { fetchRandomDrink } from '../services/randomsRequests';\r\n\r\nfunction ExploreDrinks() {\r\n  const [randomDrinkId, setRandomDrinkId] = useState(0);\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    fetchRandomDrink()\r\n      .then((response) => setRandomDrinkId(response.drinks[0].idDrink));\r\n  }, []);\r\n\r\n  const handleClick = ({ target }) => {\r\n    const text = target.innerHTML;\r\n    if (text === 'Por Ingredientes') {\r\n      history.push('/explorar/bebidas/ingredientes');\r\n    }\r\n    if (text === 'Me Surpreenda!') {\r\n      history.push(`/bebidas/${randomDrinkId}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"explore-container\">\r\n        <button\r\n          type=\"button\"\r\n          onClick={ handleClick }\r\n          data-testid=\"explore-by-ingredient\"\r\n          className=\"explore-button\"\r\n        >\r\n          Por Ingredientes\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={ handleClick }\r\n          data-testid=\"explore-surprise\"\r\n          className=\"explore-button\"\r\n        >\r\n          Me Surpreenda!\r\n        </button>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExploreDrinks;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setDrinkList, setFoodList, setReloadList } from '../redux/actions';\r\nimport { fetchIngredientsFilter } from '../services/requests';\r\n\r\nfunction IngredientCard({ id, name, thumb }) {\r\n  const dispatch = useDispatch();\r\n  const { pathname } = window.location;\r\n  let api;\r\n  let newPath;\r\n  if (pathname.includes('comidas')) {\r\n    api = 'themealdb';\r\n    newPath = '/comidas';\r\n  } else {\r\n    api = 'thecocktaildb';\r\n    newPath = '/bebidas';\r\n  }\r\n\r\n  const handleClick = async ({ target }) => {\r\n    const numOfRecipes = 12;\r\n    dispatch(setReloadList(false));\r\n    const ingredient = target.alt;\r\n    const newRecList = await fetchIngredientsFilter(numOfRecipes, api, ingredient);\r\n    if (pathname.includes('comidas')) {\r\n      dispatch(setFoodList(newRecList));\r\n    } else {\r\n      dispatch(setDrinkList(newRecList));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div data-testid={ `${id}-ingredient-card` } className=\"item-card\">\r\n      <Link to={ newPath } onClick={ handleClick }>\r\n        <h4 data-testid={ `${id}-card-name` }>{ name }</h4>\r\n        <img src={ thumb } alt={ name } data-testid={ `${id}-card-img` } />\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nIngredientCard.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  thumb: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default IngredientCard;\r\n","import React, { useEffect, useState, useRef } from 'react';\r\nimport { useLocation } from 'react-router';\r\nimport Footer from '../components/Footer';\r\nimport Header from '../components/Header';\r\nimport IngredientCard from '../components/IngredientCard';\r\nimport { fetchIngredients } from '../services/requests';\r\n\r\nfunction ExploreIngredients() {\r\n  const [ingredientsList, setIngredientsList] = useState([]);\r\n  const firstRender = useRef(true);\r\n  const pathname = useLocation().pathname;\r\n  // const { pathname } = window.location;\r\n\r\n  let api;\r\n  let apiString;\r\n  if (pathname.includes('comidas')) {\r\n    api = 'themealdb';\r\n    apiString = '';\r\n  } else {\r\n    api = 'thecocktaildb';\r\n    apiString = '1';\r\n  }\r\n\r\n  const handleIngredientsList = async () => {\r\n    const limit = 12;\r\n    console.log(pathname);\r\n    const IngredientsList = await fetchIngredients(limit, api);\r\n    setIngredientsList(IngredientsList);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (firstRender.current) {\r\n      firstRender.current = false;\r\n      handleIngredientsList();\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"item-card-container\">\r\n        {ingredientsList.map((ingredient, index) => (<IngredientCard\r\n          key={ ingredient[`strIngredient${apiString}`] }\r\n          id={ index }\r\n          name={ ingredient[`strIngredient${apiString}`] }\r\n          thumb={ `https://www.${api}.com/images/ingredients/${ingredient[`strIngredient${apiString}`]}-Small.png` }\r\n        />))}\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExploreIngredients;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Footer from '../components/Footer';\r\nimport Header from '../components/Header';\r\nimport RecipeCard from '../components/RecipeCard';\r\nimport SearchBar from '../components/SearchBar';\r\nimport { enableSearchBar } from '../redux/actions';\r\nimport { fetchCategories, fetchRecipes, fetchCountry } from '../services/requests';\r\n\r\nfunction ExploreFoodsArea() {\r\n  const [countryList, setCountryList] = useState([]);\r\n  const [foodsList, setFoodsList] = useState([]);\r\n  const [filterCountry, setFilterCountry] = useState('');\r\n  const firstRender = useRef(true);\r\n\r\n  const enableSearch = (\r\n    useSelector(({ functionsReducer }) => functionsReducer.enableSearch)\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  const handleCategoriesList = async () => {\r\n    const newCategoriesList = await fetchCategories('themealdb', 'a');\r\n    setCountryList(countryList.concat(newCategoriesList));\r\n  };\r\n\r\n  const handleFoodsList = async () => {\r\n    const limit = 12;\r\n    const newFoodsList = await fetchRecipes(limit, 'themealdb');\r\n    setFoodsList(newFoodsList);\r\n  };\r\n\r\n  const handleCountryFoods = async (teste) => {\r\n    const countryListFood = await fetchCountry(teste);\r\n    setFoodsList(countryListFood);\r\n  };\r\n\r\n  const handleFilter = ({ target }) => {\r\n    const country = target.value;\r\n    if (country === 'All') {\r\n      setFilterCountry('');\r\n      handleFoodsList();\r\n    } else if (filterCountry !== country) {\r\n      handleCountryFoods(country);\r\n      setFilterCountry(country);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (firstRender.current) {\r\n      firstRender.current = false;\r\n      handleFoodsList();\r\n      handleCategoriesList();\r\n    }\r\n  });\r\n\r\n  useEffect(() => () => {\r\n    dispatch(enableSearchBar(false));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      {enableSearch && <SearchBar />}\r\n      <div className=\"select-option\">\r\n        <select\r\n          name=\"\"\r\n          onChange={ handleFilter }\r\n          data-testid=\"explore-by-area-dropdown\"\r\n        >\r\n          <option value=\"All\" data-testid=\"All-option\">All</option>\r\n          {countryList.map(({ strArea }) => (\r\n            <option\r\n              value={ strArea }\r\n              key={ strArea }\r\n              data-testid={ `${strArea}-option` }\r\n            >\r\n              {strArea}\r\n            </option>\r\n          ))}\r\n          ;\r\n        </select>\r\n      </div>\r\n      <div className=\"item-card-container\">\r\n        {foodsList.map(({ idMeal, strMeal, strMealThumb }, index) => (<RecipeCard\r\n          key={ idMeal }\r\n          id={ index }\r\n          name={ strMeal }\r\n          path={ `/comidas/${idMeal}` }\r\n          thumb={ strMealThumb }\r\n        />))}\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExploreFoodsArea;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../styles/ingredientsList.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { setButtonState } from '../redux/actions/index';\r\n\r\nconst IngredientsList = ({ testid, list, progress }) => {\r\n  const dispatch = useDispatch();\r\n  const firstRender = useRef(true);\r\n  const { id } = useParams();\r\n\r\n  const verifyIfShouldEnableButton = () => {\r\n    let numberOfInputsChecked = 0;\r\n    const inputs = document.querySelectorAll('input[type=\\'checkbox\\']');\r\n    inputs.forEach((input) => {\r\n      if (input.checked) {\r\n        numberOfInputsChecked += 1;\r\n      }\r\n    });\r\n    if (numberOfInputsChecked === inputs.length) {\r\n      dispatch(setButtonState(false));\r\n    } else {\r\n      dispatch(setButtonState(true));\r\n    }\r\n  };\r\n\r\n  const handleClick = ({ target: { name, checked } }) => {\r\n    const checkboxes = JSON.parse(localStorage.getItem('checkboxes'));\r\n    if (checkboxes) {\r\n      if (checkboxes[id]) {\r\n        if (checkboxes[id].includes(name)) {\r\n          // se já existe no ls, remove o item\r\n          checkboxes[id].splice(checkboxes[id].indexOf(name), 1);\r\n          localStorage.setItem('checkboxes', JSON.stringify({\r\n            ...checkboxes,\r\n            [id]: [...checkboxes[id]],\r\n          }));\r\n        }\r\n        if (checked) {\r\n          // seta o item no ls se ele estiver checkado\r\n          localStorage.setItem('checkboxes', JSON.stringify({\r\n            ...checkboxes,\r\n            [id]: [...checkboxes[id], name],\r\n          }));\r\n        }\r\n      } else {\r\n        // se não existe, cria\r\n        localStorage.setItem('checkboxes', JSON.stringify({\r\n          ...checkboxes,\r\n          [id]: [name],\r\n        }));\r\n      }\r\n    } else if (checked) {\r\n      // seta o item no ls se ele estiver checkado e se não existe nada no ls\r\n      localStorage.setItem('checkboxes', JSON.stringify({\r\n        [id]: [name],\r\n      }));\r\n    }\r\n    verifyIfShouldEnableButton();\r\n    const label = document.querySelector(`label[name=${name}`);\r\n    label.classList.toggle('checked');\r\n  };\r\n\r\n  const handleCheck = () => {\r\n    const checkboxes = JSON.parse(localStorage.getItem('checkboxes'));\r\n    if (checkboxes && checkboxes[id]) {\r\n      checkboxes[id].forEach((check) => {\r\n        const input = document.getElementById(check);\r\n        const label = document.querySelector(`label[name=${check}`);\r\n        label.classList.toggle('checked');\r\n        input.setAttribute('checked', 'true');\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (progress && firstRender.current) {\r\n      firstRender.current = false;\r\n      handleCheck();\r\n      verifyIfShouldEnableButton();\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <h3>Ingredients</h3>\r\n      {list.map((item, index) => {\r\n        if (item) {\r\n          if (progress) {\r\n            const name = item.split(' ')[0];\r\n            return (\r\n              <label\r\n                key={ index }\r\n                className=\"ingredient-item\"\r\n                data-testid={ `${index}-${testid}` }\r\n                htmlFor={ name }\r\n                name={ name }\r\n              >\r\n                <input\r\n                  value={ name }\r\n                  onClick={ handleClick }\r\n                  type=\"checkbox\"\r\n                  name={ name }\r\n                  id={ name }\r\n                />\r\n                {item}\r\n              </label>\r\n            );\r\n          }\r\n          return (\r\n            <div key={ index } data-testid={ `${index}-${testid}` }>\r\n              {item}\r\n            </div>);\r\n        }\r\n        return <div key={ index } hidden />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nIngredientsList.propTypes = {\r\n  testid: PropTypes.string.isRequired,\r\n  list: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  progress: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default IngredientsList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst RecipeHead = ({ title, category }) => (\r\n  <div>\r\n    <h1 data-testid=\"recipe-title\">\r\n      {title}\r\n    </h1>\r\n    <p data-testid=\"recipe-category\">\r\n      {category}\r\n    </p>\r\n  </div>\r\n);\r\n\r\nRecipeHead.propTypes = {\r\n  title: PropTypes.string,\r\n  category: PropTypes.string,\r\n}.isRequired;\r\n\r\nexport default RecipeHead;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst RecipeImage = ({ thumb }) => (\r\n  <div className=\"img-details\">\r\n    <img data-testid=\"recipe-photo\" src={ thumb } alt=\"img\" />\r\n  </div>\r\n);\r\n\r\nRecipeImage.propTypes = {\r\n  thumb: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default RecipeImage;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst RecipeInstructions = ({ instructions }) => (\r\n  <div>\r\n    <h3>\r\n      Instructions\r\n    </h3>\r\n    <p data-testid=\"instructions\">\r\n      {instructions}\r\n    </p>\r\n  </div>\r\n);\r\n\r\nRecipeInstructions.propTypes = {\r\n  instructions: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default RecipeInstructions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useLocation } from 'react-router';\r\nimport shareIcon from '../images/shareIcon.svg';\r\n\r\nconst copy = require('clipboard-copy');\r\n\r\nfunction ShareButton({ setLoadMessage, testid, smallRecipeCard, url }) {\r\n  const { pathname } = useLocation();\r\n  const { href } = window.location;\r\n  let copyLink;\r\n\r\n  if (pathname.includes('in-progress')) {\r\n    const [link] = href.split('/in-progress');\r\n    copyLink = link;\r\n  } else if (smallRecipeCard) {\r\n    copyLink = url;\r\n  } else {\r\n    copyLink = href;\r\n  }\r\n\r\n  const shareRecipe = () => {\r\n    setLoadMessage(true);\r\n    copy(copyLink);\r\n    const TIME = 2000;\r\n    setTimeout(() => {\r\n      setLoadMessage(false);\r\n    }, TIME);\r\n  };\r\n\r\n  return (\r\n    <input\r\n      type=\"image\"\r\n      src={ shareIcon }\r\n      className=\"share-btn\"\r\n      data-testid={ testid }\r\n      onClick={ shareRecipe }\r\n      alt=\"share\"\r\n    />\r\n  );\r\n}\r\n\r\nShareButton.propTypes = {\r\n  setLoadMessage: PropTypes.func,\r\n}.isRequired;\r\n\r\nexport default ShareButton;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router';\r\n\r\nfunction StartRecipesBtn() {\r\n  const history = useHistory();\r\n  const path = history.location.pathname;\r\n  const [recipeButtonText, setRecipeButtonText] = useState('Iniciar Receita');\r\n  const [disableButton, setDisableButton] = useState(false);\r\n  const firstRender = useRef(true);\r\n\r\n  const { id } = useParams();\r\n  let key;\r\n  let otherKey;\r\n  if (path.includes('comidas')) {\r\n    key = 'meals';\r\n    otherKey = 'cocktails';\r\n  } else {\r\n    key = 'cocktails';\r\n    otherKey = 'meals';\r\n  }\r\n\r\n  const handleClick = () => {\r\n    const progress = JSON.parse(localStorage.getItem('inProgressRecipes'));\r\n    if (progress) {\r\n      localStorage.setItem('inProgressRecipes', JSON.stringify({\r\n        [otherKey]: {\r\n          ...progress[otherKey],\r\n        },\r\n        [key]: {\r\n          ...progress[key],\r\n          [id]: [],\r\n        },\r\n      }));\r\n    } else {\r\n      localStorage.setItem('inProgressRecipes', JSON.stringify({\r\n        [otherKey]: {},\r\n        [key]: { [id]: [] },\r\n      }));\r\n    }\r\n    history.push(`${id}/in-progress`);\r\n  };\r\n\r\n  const doubleRecipe = () => {\r\n    const double = JSON.parse(localStorage.getItem('doneRecipes'));\r\n    if (double && double.some((item) => item.id === id)) {\r\n      setDisableButton(true);\r\n    }\r\n  };\r\n\r\n  const handleButtonText = () => {\r\n    const progress = JSON.parse(localStorage.getItem('inProgressRecipes'));\r\n    if (progress && progress[key][id]) {\r\n      setRecipeButtonText('Continuar Receita');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (firstRender.current) {\r\n      handleButtonText();\r\n      doubleRecipe();\r\n    } else firstRender.current = false;\r\n  });\r\n\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      data-testid=\"start-recipe-btn\"\r\n      onClick={ handleClick }\r\n      className=\"btn-start\"\r\n      disabled={ disableButton }\r\n    >\r\n      {recipeButtonText}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default StartRecipesBtn;\r\n","const handleIngredientsList = (details) => {\r\n  if (details.length !== 0) {\r\n    let keys = Object.keys(details);\r\n    keys = keys.filter((key) => key.includes('Ingredient'));\r\n    keys = keys.map((ingredient, index) => {\r\n      const measure = details[`strMeasure${index + 1}`];\r\n      let stringMeasure = `- ${measure}`;\r\n      if (measure === null) {\r\n        stringMeasure = '';\r\n      }\r\n      return details[ingredient] !== '' && details[ingredient] !== null ? (\r\n        `${details[ingredient]} ${stringMeasure}`) : undefined;\r\n    });\r\n    return keys;\r\n  }\r\n};\r\n\r\nexport default handleIngredientsList;\r\n","import React, { useEffect, useState, useRef } from 'react';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport FavoriteButton from '../components/FavoriteButton';\r\nimport IngredientsList from '../components/IngredientsList';\r\nimport RecipeHead from '../components/RecipeHead';\r\nimport RecipeImage from '../components/RecipeImage';\r\nimport RecipeInstructions from '../components/RecipeInstructions';\r\nimport ShareButton from '../components/ShareButton';\r\nimport StartRecipesBtn from '../components/StartRecipesBtn';\r\nimport { fetchDetails, fetchRecipes } from '../services/requests';\r\nimport '../styles/itemCard.css';\r\nimport handleIngredientsList from '../utils/handleIngredientsList';\r\n\r\nfunction RecipesDetails() {\r\n  const [details, setDetails] = useState([]);\r\n  const [recipes, setRecipes] = useState([]);\r\n  const [loadMessage, setLoadMessage] = useState(false);\r\n  const history = useHistory();\r\n  const firstRender = useRef(true);\r\n  const { id } = useParams();\r\n  // const orig = window.location.origin;\r\n\r\n  const path = history.location.pathname;\r\n  // const id = path.match(/\\d+/)[0];\r\n  let api;\r\n  let api2;\r\n  let thumb;\r\n  let recipeThumb;\r\n  let title;\r\n  let strRecipe;\r\n  let category;\r\n  let idIten;\r\n  let type;\r\n\r\n  if (path.includes('comidas')) {\r\n    api = 'themealdb';\r\n    api2 = 'thecocktaildb';\r\n    thumb = 'strMealThumb';\r\n    recipeThumb = 'strDrinkThumb';\r\n    strRecipe = 'strDrink';\r\n    title = 'strMeal';\r\n    category = 'strCategory';\r\n    idIten = 'idDrink';\r\n    type = 'bebidas';\r\n  } else {\r\n    api = 'thecocktaildb';\r\n    api2 = 'themealdb';\r\n    thumb = 'strDrinkThumb';\r\n    recipeThumb = 'strMealThumb';\r\n    strRecipe = 'strMeal';\r\n    title = 'strDrink';\r\n    category = 'strAlcoholic';\r\n    idIten = 'idMeal';\r\n    type = 'comidas';\r\n  }\r\n\r\n  const changeRoute = (ids) => {\r\n    history.push(`/${type}/${ids}`);\r\n    window.location.reload();\r\n  };\r\n\r\n  const handleFecthDetail = async () => {\r\n    const apiReturn = await fetchDetails(api, id);\r\n    setDetails(apiReturn);\r\n  };\r\n\r\n  const handleFecthRecipes = async () => {\r\n    const numberOfRecipes = 6;\r\n    const apiReturn = await fetchRecipes(numberOfRecipes, api2);\r\n    setRecipes(apiReturn);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (firstRender.current) {\r\n      firstRender.current = false;\r\n      handleFecthDetail();\r\n      handleFecthRecipes();\r\n    }\r\n  });\r\n\r\n  if (details.length === 0) return 'loading';\r\n  const listOfIngredients = handleIngredientsList(details[0]);\r\n\r\n  const player = details[0].strYoutube;\r\n  let change;\r\n  if (path.includes('comidas')) {\r\n    change = player.replace('watch?v=', 'embed/');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <RecipeImage thumb={ details[0][thumb] } />\r\n      <div className=\"head-details\">\r\n        <RecipeHead title={ details[0][title] } category={ details[0][category] } />\r\n        <div className=\"head-btns\">\r\n          <ShareButton testid=\"share-btn\" setLoadMessage={ setLoadMessage } />\r\n          <FavoriteButton\r\n            testid=\"favorite-btn\"\r\n            isFavoritePage={ false }\r\n            details={ details[0] }\r\n          />\r\n          <p hidden={ !loadMessage }>Link copiado!</p>\r\n        </div>\r\n      </div>\r\n      <IngredientsList\r\n        progress={ false }\r\n        testid=\"ingredient-name-and-measure\"\r\n        list={ listOfIngredients }\r\n      />\r\n      <RecipeInstructions instructions={ details[0].strInstructions } />\r\n      {path.includes('comidas')\r\n        && (\r\n          <div className=\"player-video\" id=\"teste\">\r\n            <iframe\r\n              data-testid=\"video\"\r\n              whidth=\"360\"\r\n              height=\"300\"\r\n              src={ change }\r\n              frameBorder=\"0\"\r\n              title=\"Youtube Video Player\"\r\n            />\r\n          </div>\r\n        )}\r\n      <div className=\"recomended\">\r\n        <h3>Recommended Recipes</h3>\r\n        <div className=\"item-card-cont-details\">\r\n          {recipes.map((recipe, index) => (\r\n            <div\r\n              className=\"item-card-recomend\"\r\n              data-testid={ `${index}-recomendation-card` }\r\n              key={ recipe[strRecipe] }\r\n            >\r\n              <p data-testid={ `${index}-recomendation-title` }>{recipe[strRecipe]}</p>\r\n              <input\r\n                type=\"image\"\r\n                src={ recipe[recipeThumb] }\r\n                alt={ recipe[strRecipe] }\r\n                onClick={ () => changeRoute(recipe[idIten]) }\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"btn-start-div\">\r\n        <StartRecipesBtn />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default RecipesDetails;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport FavoriteButton from '../components/FavoriteButton';\r\nimport IngredientsList from '../components/IngredientsList';\r\nimport RecipeHead from '../components/RecipeHead';\r\nimport RecipeImage from '../components/RecipeImage';\r\nimport RecipeInstructions from '../components/RecipeInstructions';\r\nimport ShareButton from '../components/ShareButton';\r\nimport { fetchDetails } from '../services/requests';\r\nimport handleIngredientsList from '../utils/handleIngredientsList';\r\n\r\nfunction RecipesInProgress() {\r\n  const [details, setDetails] = useState([]);\r\n  const [loadMessage, setLoadMessage] = useState(false);\r\n  const history = useHistory();\r\n  const firstRender = useRef(true);\r\n  const disableButton = useSelector(({ functionsReducer }) => (\r\n    functionsReducer.disableFinishButton\r\n  ));\r\n\r\n  const path = history.location.pathname;\r\n  const id = path.match(/\\d+/)[0];\r\n  let api;\r\n  let thumb;\r\n  let title;\r\n  let category;\r\n  let idItem;\r\n  let area;\r\n  let type;\r\n  let cat;\r\n  let tags;\r\n  let lsKey;\r\n\r\n  if (path.includes('comidas')) {\r\n    api = 'themealdb';\r\n    lsKey = 'meals';\r\n    idItem = 'idMeal';\r\n    thumb = 'strMealThumb';\r\n    title = 'strMeal';\r\n    category = 'strCategory';\r\n    area = 'strArea';\r\n    type = 'comida';\r\n    cat = 'strCategory';\r\n  } else {\r\n    api = 'thecocktaildb';\r\n    lsKey = 'cocktails';\r\n    idItem = 'idDrink';\r\n    thumb = 'strDrinkThumb';\r\n    title = 'strDrink';\r\n    category = 'strAlcoholic';\r\n    cat = 'strCategory';\r\n    area = '';\r\n    type = 'bebida';\r\n  }\r\n\r\n  const handleFecthDetails = async () => {\r\n    const apiReturn = await fetchDetails(api, id);\r\n    setDetails(apiReturn);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (firstRender.current) {\r\n      firstRender.current = false;\r\n      handleFecthDetails();\r\n    }\r\n  });\r\n\r\n  if (details.length === 0) return 'loading';\r\n  const listOfIngredients = handleIngredientsList(details[0]);\r\n\r\n  // a data eu peguei aqui https://stackoverflow.com/questions/1531093/how-do-i-get-the-current-date-in-javascript?rq=1\r\n\r\n  let today = new Date();\r\n  const dd = String(today.getDate()).padStart(2, '0');\r\n  const mm = String(today.getMonth() + 1).padStart(2, '0'); // January is 0!\r\n  const yyyy = today.getFullYear();\r\n\r\n  today = `${dd}/${mm}/${yyyy}`;\r\n\r\n  if (details[0].strTags === null) {\r\n    tags = [];\r\n  } else if (path.includes('comidas')) {\r\n    tags = details[0].strTags.split(',');\r\n  }\r\n\r\n  const recipe = {\r\n    id: details[0][idItem],\r\n    type,\r\n    area: details[0][area] || '',\r\n    category: details[0][cat],\r\n    alcoholicOrNot: details[0].strAlcoholic || '',\r\n    name: details[0][title],\r\n    image: details[0][thumb],\r\n    doneDate: today,\r\n    tags,\r\n  };\r\n\r\n  const handleClick = () => {\r\n    if (!localStorage.getItem('doneRecipes')) {\r\n      localStorage.setItem('doneRecipes', JSON.stringify([recipe]));\r\n      history.push('/receitas-feitas');\r\n    } else {\r\n      const exist = JSON.parse(localStorage.getItem('doneRecipes'));\r\n      const arr = [...exist, recipe];\r\n      localStorage.setItem('doneRecipes', JSON.stringify(arr));\r\n      history.push('/receitas-feitas');\r\n    }\r\n    const recipesInProgress = JSON.parse(localStorage.getItem('inProgressRecipes'));\r\n    if (recipesInProgress) {\r\n      delete recipesInProgress[lsKey][id];\r\n      console.log(recipesInProgress);\r\n      localStorage.setItem('inProgressRecipes', JSON.stringify(recipesInProgress));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <RecipeImage thumb={ details[0][thumb] } />\r\n      <div className=\"head-details\">\r\n        <RecipeHead title={ details[0][title] } category={ details[0][category] } />\r\n        <div className=\"head-btns\">\r\n          <ShareButton testid=\"share-btn\" setLoadMessage={ setLoadMessage } />\r\n          <FavoriteButton\r\n            testid=\"favorite-btn\"\r\n            isFavoritePage={ false }\r\n            details={ details[0] }\r\n          />\r\n          <p hidden={ !loadMessage }>Link copiado!</p>\r\n        </div>\r\n      </div>\r\n      <IngredientsList progress testid=\"ingredient-step\" list={ listOfIngredients } />\r\n      <RecipeInstructions instructions={ details[0].strInstructions } />\r\n      <button\r\n        className=\"btn-start\"\r\n        type=\"button\"\r\n        data-testid=\"finish-recipe-btn\"\r\n        onClick={ handleClick }\r\n        disabled={ disableButton }\r\n      >\r\n        Finalizar receita\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecipesInProgress;\r\n","import React from 'react';\r\n\r\nfunction NotFound() {\r\n  return (\r\n    <h1>Not Found</h1>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport './App.css';\r\nimport {\r\n  Drinks, Explore, FavoriteRecipes,\r\n  Foods, Login, Profile, RecipesDone, ExploreFoods,\r\n  ExploreDrinks, ExploreIngredients, NotFound,\r\n  RecipesDetails, ExploreFoodsArea, RecipesInProgress,\r\n} from './pages';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <Switch>\r\n        <Route exact path=\"/comidas/:id\" component={ RecipesDetails } />\r\n        <Route exact path=\"/bebidas/:id\" component={ RecipesDetails } />\r\n        <Route exact path=\"/\" component={ Login } />\r\n        <Route exact path=\"/Comidas\" component={ Foods } />\r\n        <Route exact path=\"/Bebidas\" component={ Drinks } />\r\n        <Route exact path=\"/Explorar\" component={ Explore } />\r\n        <Route exact path=\"/explorar/comidas\" component={ ExploreFoods } />\r\n        <Route exact path=\"/explorar/bebidas\" component={ ExploreDrinks } />\r\n        <Route\r\n          exact\r\n          path=\"/explorar/bebidas/ingredientes\"\r\n          component={ ExploreIngredients }\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/explorar/comidas/ingredientes\"\r\n          component={ ExploreIngredients }\r\n        />\r\n        <Route exact path=\"/explorar/comidas/area\" component={ ExploreFoodsArea } />\r\n        <Route exact path=\"/Perfil\" component={ Profile } />\r\n        <Route exact path=\"/receitas-feitas\" component={ RecipesDone } />\r\n        <Route exact path=\"/receitas-favoritas\" component={ FavoriteRecipes } />\r\n        <Route\r\n          exact\r\n          path=\"/comidas/:id/in-progress\"\r\n          component={ RecipesInProgress }\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/bebidas/:id/in-progress\"\r\n          component={ RecipesInProgress }\r\n        />\r\n        <Route exact path=\"*\" component={ NotFound } />\r\n      </Switch>\r\n    </Router>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { LOGIN } from '../actions';\n\nconst initialState = {\n  mealsToken: 1,\n  cocktailsToken: 1,\n  email: '',\n};\n\nconst user = (state = initialState, { type, email }) => {\n  switch (type) {\n  case LOGIN:\n    return { ...state, email };\n  default:\n    return state;\n  }\n};\n\nexport default user;\n","import {\r\n  ENABLE_DISABLE_SEARCH_BAR,\r\n  ENABLE_BUTTON, DISABLE_BUTTON,\r\n  ENABLE_DISABLE_FINISH_BUTTON,\r\n} from '../actions';\r\n\r\nconst initialState = {\r\n  enableSearch: false,\r\n  enableButton: false,\r\n  disableButton: true,\r\n  disableFinishButton: true,\r\n};\r\n\r\nconst functionsReducer = (state = initialState, { type, change, value }) => {\r\n  switch (type) {\r\n  case ENABLE_DISABLE_SEARCH_BAR:\r\n    return { ...state, enableSearch: change };\r\n  case ENABLE_BUTTON:\r\n    return { ...state, enableButton: change };\r\n  case DISABLE_BUTTON:\r\n    return { ...state, disableButton: !state.disableButton };\r\n  case ENABLE_DISABLE_FINISH_BUTTON:\r\n    return {\r\n      ...state,\r\n      disableFinishButton: value,\r\n    };\r\n  default:\r\n    return state;\r\n  }\r\n};\r\n\r\nexport default functionsReducer;\r\n","import {\r\n  SET_DRINK_LIST, SET_FOOD_LIST, SET_RECIPE_LIST, SET_RELOAD_LIST,\r\n} from '../actions';\r\n\r\nconst INITIAL_STATE = {\r\n  recipeList: [],\r\n  foodList: [],\r\n  drinkList: [],\r\n  reloadList: true,\r\n};\r\n\r\nconst recipes = (state = INITIAL_STATE, { type, payload, value }) => {\r\n  switch (type) {\r\n  case SET_RECIPE_LIST:\r\n    return {\r\n      ...state,\r\n      recipeList: payload,\r\n    };\r\n  case SET_DRINK_LIST:\r\n    return {\r\n      ...state,\r\n      drinkList: payload,\r\n    };\r\n  case SET_FOOD_LIST:\r\n    return {\r\n      ...state,\r\n      foodList: payload,\r\n    };\r\n  case SET_RELOAD_LIST:\r\n    return {\r\n      ...state,\r\n      reloadList: value,\r\n    };\r\n  default:\r\n    return state;\r\n  }\r\n};\r\n\r\nexport default recipes;\r\n","import { combineReducers } from 'redux';\r\nimport user from './userReducer';\r\nimport functionsReducer from './functionsReducer';\r\nimport recipes from './recipesReducer';\r\n\r\nconst rootReducer = combineReducers({ user, functionsReducer, recipes });\r\n\r\nexport default rootReducer;\r\n","import { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducers';\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nstore.subscribe(() => {\r\n  const { user } = store.getState();\r\n  const { mealsToken, cocktailsToken, email } = user;\r\n  localStorage.setItem('mealsToken', mealsToken);\r\n  localStorage.setItem('cocktailsToken', cocktailsToken);\r\n  if (email !== '') {\r\n    localStorage.setItem('user', JSON.stringify({\r\n      email,\r\n    }));\r\n  }\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/store/index';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}